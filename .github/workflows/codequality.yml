name: CI
# Updated workflow for code quality checks

permissions:
  contents: read
  pull-requests: write

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  quality:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint pytest pytest-cov bandit black mypy tomli
          pip install -e .
      - name: Lint with pylint
        run: pylint --rcfile=.pylintrc $(git ls-files '*.py') || exit $(($? & 35))
      - name: Check formatting with black
        run: black --check --diff .
      - name: Static type checks with mypy
        run: mypy --config-file mypy.ini src cli
      - name: Security scan with bandit
        run: bandit -r src cli
      - name: Run tests with pytest
        run: |
          pytest tests/ --cov=src --cov=cli --cov-report=xml:coverage.xml --cov-report=term
          ls -la  # Debug: List files to verify coverage.xml was created
      - name: Upload coverage reports
        # AI-assisted: Ensure Codecov uploads authenticate to avoid rate limiting.
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.xml  # Use files (plural) instead of file
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true  # Add debug output
